// <auto-generated />
using System;
using EMS.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EMS.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240802145105_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("EMS.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EmployeeTypeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PersonalDetailsId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Salary")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeTypeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0590c04e-87ec-4894-98fc-22ddf7ab50a2"),
                            EmployeeTypeId = new Guid("65423f4c-4ddd-4cc5-87c5-20608da7b3e3"),
                            Name = "Alice Johnson",
                            PersonalDetailsId = new Guid("0b4e5088-c26d-4f0f-8260-dd50fb9c8304"),
                            Salary = 60000m
                        },
                        new
                        {
                            Id = new Guid("0cac004e-66a0-4466-a88b-08872a205e7f"),
                            EmployeeTypeId = new Guid("8bcbca09-e0d1-4357-8598-d57b6c648425"),
                            Name = "Bob Smith",
                            PersonalDetailsId = new Guid("53596b21-0dc6-4886-bdca-e36645078fa5"),
                            Salary = 45000m
                        },
                        new
                        {
                            Id = new Guid("e08293e2-1e51-4fd9-8094-7da9c63035bd"),
                            EmployeeTypeId = new Guid("65423f4c-4ddd-4cc5-87c5-20608da7b3e3"),
                            Name = "Charlie Davis",
                            PersonalDetailsId = new Guid("9fc34334-8181-4538-8e13-14044ac83cd2"),
                            Salary = 55000m
                        },
                        new
                        {
                            Id = new Guid("61ecba9c-52ce-4309-abd5-b4f3526b3efa"),
                            EmployeeTypeId = new Guid("8bcbca09-e0d1-4357-8598-d57b6c648425"),
                            Name = "Diana Prince",
                            PersonalDetailsId = new Guid("2099c408-4442-4c8e-8e10-c10b32ab118c"),
                            Salary = 40000m
                        },
                        new
                        {
                            Id = new Guid("4c998f9a-f4b8-45db-8812-74a6ee852c74"),
                            EmployeeTypeId = new Guid("65423f4c-4ddd-4cc5-87c5-20608da7b3e3"),
                            Name = "Eve Adams",
                            PersonalDetailsId = new Guid("e92cba51-b5d0-493c-ad3e-3fd4c8f501a9"),
                            Salary = 62000m
                        });
                });

            modelBuilder.Entity("EMS.Domain.Entities.EmployeeDetails.Certification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CertificationName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("IssuingOrganization")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Certifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CertificationName = "Certified Kubernetes Administrator",
                            EmployeeId = new Guid("0590c04e-87ec-4894-98fc-22ddf7ab50a2"),
                            ExpiryDate = new DateTime(2022, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IssueDate = new DateTime(2019, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IssuingOrganization = "CNCF"
                        },
                        new
                        {
                            Id = 2,
                            CertificationName = "Project Management Professional",
                            EmployeeId = new Guid("0cac004e-66a0-4466-a88b-08872a205e7f"),
                            ExpiryDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IssueDate = new DateTime(2018, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IssuingOrganization = "PMI"
                        });
                });

            modelBuilder.Entity("EMS.Domain.Entities.EmployeeDetails.Experience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Responsibilities")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Experiences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Tech Corp",
                            EmployeeId = new Guid("0590c04e-87ec-4894-98fc-22ddf7ab50a2"),
                            EndDate = new DateTime(2012, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobTitle = "Software Developer",
                            Responsibilities = "Developing software",
                            StartDate = new DateTime(2008, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "Business Inc.",
                            EmployeeId = new Guid("0cac004e-66a0-4466-a88b-08872a205e7f"),
                            EndDate = new DateTime(2018, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobTitle = "Marketing Manager",
                            Responsibilities = "Managing marketing campaigns",
                            StartDate = new DateTime(2013, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EMS.Domain.Entities.EmployeeDetails.GovernmentDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("GovernmentDocuments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DocumentNumber = "A1234567",
                            DocumentType = "Passport",
                            EmployeeId = new Guid("0590c04e-87ec-4894-98fc-22ddf7ab50a2"),
                            ExpiryDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IssueDate = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            DocumentNumber = "B7654321",
                            DocumentType = "Driver's License",
                            EmployeeId = new Guid("0cac004e-66a0-4466-a88b-08872a205e7f"),
                            ExpiryDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IssueDate = new DateTime(2014, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EMS.Domain.Entities.EmployeeDetails.PersonalDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PersonalDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0b4e5088-c26d-4f0f-8260-dd50fb9c8304"),
                            Address = "123 Main St",
                            DateOfBirth = new DateTime(1985, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice@example.com",
                            PhoneNumber = "555-1234"
                        },
                        new
                        {
                            Id = new Guid("53596b21-0dc6-4886-bdca-e36645078fa5"),
                            Address = "456 Elm St",
                            DateOfBirth = new DateTime(1990, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob@example.com",
                            PhoneNumber = "555-5678"
                        },
                        new
                        {
                            Id = new Guid("9fc34334-8181-4538-8e13-14044ac83cd2"),
                            Address = "789 Oak St",
                            DateOfBirth = new DateTime(1988, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "charlie@example.com",
                            PhoneNumber = "555-8765"
                        },
                        new
                        {
                            Id = new Guid("2099c408-4442-4c8e-8e10-c10b32ab118c"),
                            Address = "321 Pine St",
                            DateOfBirth = new DateTime(1995, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "diana@example.com",
                            PhoneNumber = "555-4321"
                        },
                        new
                        {
                            Id = new Guid("e92cba51-b5d0-493c-ad3e-3fd4c8f501a9"),
                            Address = "654 Maple St",
                            DateOfBirth = new DateTime(1992, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "eve@example.com",
                            PhoneNumber = "555-6789"
                        });
                });

            modelBuilder.Entity("EMS.Domain.Entities.EmployeeDetails.Qualification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GraduationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Qualifications");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af1851e6-a18b-4bb6-8ecb-103200240642"),
                            Degree = "BSc Computer Science",
                            EmployeeId = new Guid("0590c04e-87ec-4894-98fc-22ddf7ab50a2"),
                            Grade = "First Class",
                            GraduationDate = new DateTime(2007, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Institution = "University of Example"
                        },
                        new
                        {
                            Id = new Guid("e06faf48-7945-40e8-a10f-eb441931ca70"),
                            Degree = "MBA",
                            EmployeeId = new Guid("0cac004e-66a0-4466-a88b-08872a205e7f"),
                            Grade = "Distinction",
                            GraduationDate = new DateTime(2012, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Institution = "Business School Example"
                        });
                });

            modelBuilder.Entity("EMS.Domain.Entities.EmployeeType", b =>
                {
                    b.Property<Guid>("EmployeeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmpTypes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeTypeId");

                    b.ToTable("EmployeeTypes");

                    b.HasData(
                        new
                        {
                            EmployeeTypeId = new Guid("65423f4c-4ddd-4cc5-87c5-20608da7b3e3"),
                            EmpTypes = "Permanent"
                        },
                        new
                        {
                            EmployeeTypeId = new Guid("8bcbca09-e0d1-4357-8598-d57b6c648425"),
                            EmpTypes = "Temporary"
                        });
                });

            modelBuilder.Entity("EMS.Domain.Entities.Employee", b =>
                {
                    b.HasOne("EMS.Domain.Entities.EmployeeType", "EmployeeType")
                        .WithMany()
                        .HasForeignKey("EmployeeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeType");
                });

            modelBuilder.Entity("EMS.Domain.Entities.EmployeeDetails.Certification", b =>
                {
                    b.HasOne("EMS.Domain.Entities.Employee", "Employee")
                        .WithMany("Certifications")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EMS.Domain.Entities.EmployeeDetails.Experience", b =>
                {
                    b.HasOne("EMS.Domain.Entities.Employee", "Employee")
                        .WithMany("Experiences")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EMS.Domain.Entities.EmployeeDetails.GovernmentDocument", b =>
                {
                    b.HasOne("EMS.Domain.Entities.Employee", "Employee")
                        .WithMany("GovernmentDocuments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EMS.Domain.Entities.EmployeeDetails.PersonalDetails", b =>
                {
                    b.HasOne("EMS.Domain.Entities.Employee", "Employee")
                        .WithOne("PersonalDetails")
                        .HasForeignKey("EMS.Domain.Entities.EmployeeDetails.PersonalDetails", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EMS.Domain.Entities.EmployeeDetails.Qualification", b =>
                {
                    b.HasOne("EMS.Domain.Entities.Employee", "Employee")
                        .WithMany("Qualifications")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EMS.Domain.Entities.Employee", b =>
                {
                    b.Navigation("Certifications");

                    b.Navigation("Experiences");

                    b.Navigation("GovernmentDocuments");

                    b.Navigation("PersonalDetails")
                        .IsRequired();

                    b.Navigation("Qualifications");
                });
#pragma warning restore 612, 618
        }
    }
}
