@model EmployeeModel
<link rel="stylesheet" href="~/css/DetailsStyles.css" asp-append-version="true"/>
<script src="~/js/modal.js" asp-append-version="true"></script>
<div class="container">
<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5>Employee Details</h5>
            </div>
            <div class="card-body">
                <table class="table table-borderless">
                    <tbody>
                    <tr>
                        <th scope="row" class="col-sm-4">EmployeeName :</th>
                        <td class="col-sm-8">@Model.Name</td>
                    </tr>
                    <tr>
                        <th scope="row" class="col-sm-4">EmployeeType :</th>
                        <td class="col-sm-8">@Model.EmployeeType</td>
                    </tr>
                    <tr>
                        <th scope="row" class="col-sm-4">DepartmentType :</th>
                        <td class="col-sm-8">@Model.DepartmentType</td>
                    </tr>
                    <!-- Add other fields as required -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
        <!-- Employee Salary -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5>Salary</h5>
                </div>
                <div class="card-body">
                    @if (Model.EmployeeSalary == null)
                    {
                        <p class="card-text"><strong>Salary :</strong> Not yet calculated</p>
                    }
                    else
                    {
                        <table class="table table-borderless">
                            <tbody>
                                <tr>
                                    <th scope="row" class="col-sm-4">Net Salary :</th>
                                    <td class="col-sm-8">@Model.EmployeeSalary.NetSalary</td>
                                </tr>
                                <tr>
                                    <th scope="row" class="col-sm-4">Band :</th>
                                    <td class="col-sm-8">@Model.EmployeeSalary.Band</td>
                                </tr>
                            </tbody>
                        </table>
                    }
                </div>
            </div>
        </div>
</div>

<div class="col-md-6">
        <!-- Personal Details -->
        <div class="card">
            <div class="card-header">
                <h5>Personal Details</h5>
            </div>
            <div class="card-body">
                <table class="table table-borderless">
                    <tbody>
                        <tr>
                            <th scope="row" class="col-sm-4">Address :</th>
                            <td class="col-sm-8">@Model.PersonalDetails?.Address</td>
                        </tr>
                        <tr>
                            <th scope="row" class="col-sm-4">Phone Number :</th>
                            <td class="col-sm-8">@Model.PersonalDetails?.PhoneNumber</td>
                        </tr>
                        <tr>
                            <th scope="row" class="col-sm-4">Email :</th>
                            <td class="col-sm-8">@Model.PersonalDetails?.Email</td>
                        </tr>
                        <tr>
                            <th scope="row" class="col-sm-4">Date of Birth :</th>
                            <td class="col-sm-8">@Model.PersonalDetails?.DateOfBirth.ToShortDateString()</td>
                        </tr>
                    </tbody>
                </table>
                <button class="btn btn-primary" onclick="openUpdatePersonalDetailsModal('@Model.EmployeeId')">Update</button>
            </div>
        </div>
    </div>

<!-- Leave Details -->
<div class="col-md-12">
    <div class="card mb-3">
        <div class="card-header"><h5 class="my-3">Leaves</h5>
            <button class="btn btn-primary mb-3" onclick="openApplyLeaveModal('@Model.EmployeeId')">Apply</button>
            @if (Model.Leave != null && Model.Leave.Any())
            {
                <div class="table-responsive">
                        <table class="table table-hover table-bordered rounded-table">
                        <thead class="table-dark">
                        <tr>
                            <th>StartDate</th>
                            <th>EndDate</th>
                            <th>Reason</th>
                            <th>LeaveStatus</th>
                            <th>Actions</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var leave in Model.Leave)
                        {
                            <tr>
                                <td>@leave.StartDate.ToShortDateString()</td>
                                <td>@leave.EndDate.ToShortDateString()</td>
                                <td>@leave.Reason</td>
                                <td>@leave.LeaveStatus</td>
                                <td>
                                    <button class="btn btn-sm btn-danger" onclick="openCancelLeaveModal('@Model.EmployeeId', '@leave.Id')">Cancel</button>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <p>Leave Not Yet Applied</p>
            }
    </div>
    </div>
</div>

<!-- Qualifications -->
<div class="col-md-12">
    <div class="card mb-3">
        <div class="card-header"><h5 class="my-3">Qualifications</h5>
        <button class="btn btn-primary mb-3" onclick="openAddQualificationModal('@Model.EmployeeId')">Add Qualification</button>
        @if (Model.Qualifications != null && Model.Qualifications.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover table-bordered rounded-table">
                    <thead class="table-dark">
                    <tr>
                        <th>Degree</th>
                        <th>Institution</th>
                        <th>Graduation Date</th>
                        <th>Grade</th>
                        <th>Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var qualification in Model.Qualifications)
                    {
                        <tr>
                            <td>@qualification.Degree</td>
                            <td>@qualification.Institution</td>
                            <td>@qualification.GraduationDate.ToShortDateString()</td>
                            <td>@qualification.Grade</td>
                            <td>
                                <button class="btn btn-sm btn-primary me-1" onclick="openUpdateQualificationModal('@Model.EmployeeId', '@qualification.QualificationId')">Update</button>
                                <button class="btn btn-sm btn-danger" onclick="openDeleteQualificationModal('@Model.EmployeeId', '@qualification.QualificationId')">Delete</button>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <p>No qualifications available.</p>
        }
    </div>
</div>
</div>





<!-- Experiences -->
<div class="col-md-12">
    <div class="card mb-3">
        <div class="card-header">
            <h5 class="my-3">Experiences</h5>
        <button class="btn btn-primary mb-3" onclick="openAddExperienceModal('@Model.EmployeeId')">Add Experience</button>
        @if (Model.Experiences != null && Model.Experiences.Any())
        {
            <div class="table-responsive">
                        <table id="datatablesSimple" class="table table-hover table-bordered rounded-table">
                    <thead class="table-dark">
                    <tr>
                        <th>Company Name</th>
                        <th>Job Title</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Responsibilities</th>
                        <th>Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var experience in Model.Experiences)
                    {
                        <tr>
                            <td>@experience.CompanyName</td>
                            <td>@experience.JobTitle</td>
                            <td>@experience.StartDate.ToShortDateString()</td>
                            <td>@(experience.EndDate.HasValue ? experience.EndDate.Value.ToShortDateString() : "Present")</td>
                            <td>@experience.Responsibilities</td>
                            <td>
                                <button class="btn btn-sm btn-primary me-1" onclick="openUpdateExperienceModal('@Model.EmployeeId', '@experience.ExperienceId')">Update</button>
                                <button class="btn btn-sm btn-danger" onclick="openDeleteExperienceModal('@Model.EmployeeId', '@experience.ExperienceId')">Delete</button>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <p>No experiences available.</p>
        }
    </div>
</div>
</div>
    
<!-- Government Documents -->
<div class="col-md-12">
    <div class="card mb-3">
        <div class="card-header">
            <h5 class="my-3">Government Documents</h5>
            <div>
                <button class="btn btn-primary mb-3" onclick="openAddGovernmentDocumentModal('@Model.EmployeeId')">Add Document</button>
                @if (Model.GovernmentDocuments != null && Model.GovernmentDocuments.Any())
                {
                    <div class="table-responsive">
                            <table id="datatablesSimple" class="table table-hover table-bordered rounded-table">
                            <thead class="table-dark">
                            <tr>
                                <th>Document Type</th>
                                <th>Document Number</th>
                                <th>Issue Date</th>
                                <th>Expiry Date</th>
                                <th>Actions</th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var document in Model.GovernmentDocuments)
                            {
                                <tr>
                                    <td>@document.DocumentType</td>
                                    <td>@document.DocumentNumber</td>
                                    <td>@document.IssueDate.ToShortDateString()</td>
                                    <td>@document.ExpiryDate?.ToShortDateString()</td>
                                    <td>
                                        <button class="btn btn-sm btn-primary me-1" onclick="openUpdateGovernmentDocumentModal('@Model.EmployeeId', '@document.DocumentId')">Update</button>
                                        <button class="btn btn-sm btn-danger" onclick="openDeleteGovernmentDocumentModal('@Model.EmployeeId', '@document.DocumentId')">Delete</button>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <p>No government documents available.</p>
                }
            </div>
        </div>
    </div>
</div>
<!-- Certifications -->

<div class="col-md-12">
    <div class="card mb-3">
        <div class="card-header">
            <h4 class="my-3">Certifications</h4>
       
      
        <button class="btn btn-primary mb-3" onclick="openAddCertificationModal('@Model.EmployeeId')">Add Certification</button>
        @if (Model.Certifications != null && Model.Certifications.Any())
        {
            <div class="table-responsive">
                        <table id="datatablesSimple" class="table table-hover table-bordered rounded-table">
                    <thead class="table-dark">
                    <tr>
                        <th>Certification Name</th>
                        <th>Issuing Organization</th>
                        <th>Issue Date</th>
                        <th>Expiry Date</th>
                        <th>Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var certification in Model.Certifications)
                    {
                        <tr>
                            <td>@certification.CertificationName</td>
                            <td>@certification.IssuingOrganization</td>
                            <td>@certification.IssueDate.ToShortDateString()</td>
                            <td>@Html.Raw(certification.ExpiryDate.HasValue ? certification.ExpiryDate.Value.ToShortDateString() : "N/A")</td>
                            <td>
                                <button class="btn btn-sm btn-primary me-1" onclick="openUpdateCertificationModal('@Model.EmployeeId', '@certification.CertificationId')">Update</button>
                                <button class="btn btn-sm btn-danger" onclick="openDeleteCertificationModal('@Model.EmployeeId', '@certification.CertificationId')">Delete</button>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <p>No certifications available.</p>
        }
    </div>
</div>
</div>
    <form asp-action="Index" method="get" style="display: inline;">
        <button type="submit" class="btn btn-secondary">Back to List</button>
    </form>
    <form asp-action="Edit" method="get" asp-route-id="@Model.EmployeeId" style="display: inline;">
        <button type="submit" class="btn btn-primary">Edit</button>
    </form>
    <button class="btn btn-danger" onclick="openDeleteEmployeeModal('@Model.EmployeeId')"><i class="bi bi-trash-fill">Delete</i></button>


<!-- Modals for each action -->
<div id="modalContainer"></div>

</div>